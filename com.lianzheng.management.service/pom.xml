<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.1</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.lianzheng</groupId>
    <artifactId>management-service</artifactId>
    <version>0.0.1</version>
    <name>management-service</name>
    <description>com.lianzheng.management.service</description>
    <properties>
        <java.version>1.8</java.version>
        <spring.boot.version>2.5.5</spring.boot.version>
        <mybatisplus.version>3.2.0</mybatisplus.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring.boot.version}</version>
            <exclusions>
<!--                <exclusion>-->
<!--                    <groupId>org.hibernate</groupId>-->
<!--                    <artifactId>hibernate-validator</artifactId>-->
<!--                </exclusion>-->
                <!-- 排除自带的logback依赖,解决multiple SLF4J bindings -->
                <!-- spring-boot-starter 和 spring-boot-starter-web两个依赖中都需要进行排除-->
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>5.3.4.Final</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <!-- 排除自带的logback依赖,解决multiple SLF4J bindings -->
                <!-- spring-boot-starter 和 spring-boot-starter-web两个依赖中都需要进行排除-->
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-core</artifactId>
            <version>1.8.0</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.5</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-commons</artifactId>
            <version>2.5.5</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
            <version>${mybatisplus.version}</version>
        </dependency>
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-extension</artifactId>
            <version>${mybatisplus.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>dynamic-datasource-spring-boot-starter</artifactId>
            <version>${mybatisplus.version}</version>
            <exclusions>
                <!-- 排除自带的logback依赖,解决multiple SLF4J bindings -->
                <!-- spring-boot-starter 和 spring-boot-starter-web两个依赖中都需要进行排除-->
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.github.yingzhuo</groupId>
            <artifactId>spring-boot-stater-env</artifactId>
            <version>2.0.2</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-jasper</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>5.3.13</version>
        </dependency>
        <dependency>
            <groupId>com.lianzheng</groupId>
            <artifactId>core-log</artifactId>
            <version>0.0.1</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.lianzheng</groupId>
            <artifactId>core-exceptionhandling</artifactId>
            <version>0.0.1</version>
            <scope>compile</scope>
            <exclusions>
                <!-- 排除自带的logback依赖,解决multiple SLF4J bindings -->
                <!-- spring-boot-starter 和 spring-boot-starter-web两个依赖中都需要进行排除-->
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-slf4j-impl</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.lianzheng</groupId>
            <artifactId>core-server</artifactId>
            <version>0.0.1</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.lianzheng</groupId>
            <artifactId>core-auth</artifactId>
            <version>0.0.1</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.lianzheng</groupId>
            <artifactId>core-pdf</artifactId>
            <version>0.0.1</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.lianzheng</groupId>
            <artifactId>core-sign</artifactId>
            <version>0.0.1</version>
        </dependency>

        <dependency>
            <groupId>com.lianzheng</groupId>
            <artifactId>file_storage_sdk</artifactId>
            <version>0.0.1</version>
            <scope>system</scope>
            <systemPath>${pom.basedir}/../lib/file_storage_sdk-0.0.1.jar</systemPath>
        </dependency>
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>5.0.5</version>
        </dependency>
        <!-- hutool-http -->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-http</artifactId>
            <version>5.8.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/cn.hutool/hutool-crypto -->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-crypto</artifactId>
            <version>5.8.0</version>
        </dependency>


        <!--以下引入业务逻辑包-->
        <dependency>
            <groupId>com.lianzheng</groupId>
            <artifactId>com.lianzheng.notarization.master</artifactId>
            <version>0.0.1</version>
        </dependency>

        <dependency>
            <groupId>com.lianzheng</groupId>
            <artifactId>com.lianzheng.notarization.graduation</artifactId>
            <version>0.0.1</version>
        </dependency>

        <dependency>
            <groupId>com.lianzheng</groupId>
            <artifactId>com.lianzheng.notarization.degree</artifactId>
            <version>0.0.1</version>
        </dependency>

        <dependency>
            <groupId>com.lianzheng</groupId>
            <artifactId>com.lianzheng.notarization.driverLicense</artifactId>
            <version>0.0.1</version>
        </dependency>

        <dependency>
            <groupId>com.lianzheng</groupId>
            <artifactId>com.lianzheng.notarization.tax</artifactId>
            <version>0.0.1</version>
        </dependency>

        <dependency>
            <groupId>com.lianzheng</groupId>
            <artifactId>com.lianzheng.notarization.sellHouse</artifactId>
            <version>0.0.1</version>
        </dependency>

        <dependency>
            <groupId>com.lianzheng</groupId>
            <artifactId>com.lianzheng.notarization.purchaseHouse</artifactId>
            <version>0.0.1</version>
        </dependency>



    </dependencies>

    <build>
        <plugins>
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-resources-plugin</artifactId>-->
<!--                <version>3.2.0</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>copy-resources</id>-->
<!--                        <phase>validate</phase>-->
<!--                        <goals>-->
<!--                            <goal>copy-resources</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <encoding>UTF-8</encoding>-->
<!--                            &lt;!&ndash; ${project.build.outputDirectory} 为构建过程输出目录，缺省为target/classes &ndash;&gt;-->
<!--                            <outputDirectory>${project.build.outputDirectory}</outputDirectory>-->
<!--                            <overwrite>true</overwrite>-->
<!--                            <resources>-->
<!--                                <resource>-->
<!--                                    &lt;!&ndash; 需要拷贝的资源文件位置 &ndash;&gt;-->
<!--                                    <directory>${project.basedir}/../com.lianzheng.core/auth/src/main/resources</directory>-->
<!--                                    &lt;!&ndash; 开启变量替换，将 pom.xml 中的相关变量替换至 properties 文件中，该项目中未使用该特性 &ndash;&gt;-->
<!--                                    <filtering>false</filtering>-->
<!--                                </resource>-->
<!--                            </resources>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--                <configuration>-->
<!--                    <encoding>UTF-8</encoding>&lt;!&ndash; 指定编码格式，否则在DOS下运行mvn命令时当发生文件资源copy时将使用系统默认使用GBK编码 &ndash;&gt;-->
<!--                </configuration>-->
<!--            </plugin>-->

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <includeSystemScope>true</includeSystemScope>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <!-- NOTE: We don't need a groupId specification because the group is
                     org.apache.maven.plugins ...which is assumed by default.
                 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <encoding>UTF-8</encoding><!-- 指定编码格式，否则在DOS下运行mvn命令时当发生文件资源copy时将使用系统默认使用GBK编码 -->
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
            </plugin>

        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <!--包含文件夹以及子文件夹下所有资源-->
                    <include>**/*.*</include>
                </includes>
            </resource>
        </resources>
    </build>



</project>
